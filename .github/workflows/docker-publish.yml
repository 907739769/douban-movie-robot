name: Java CI with Maven docker

on:
  push:
    # 分支
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Running Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: 缓存 Maven 依赖
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 编译代码
        run: mvn compile
      - name: Deploy the JAR file to the remote server
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Generate the package
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: 将 JAR 包部署到服务器
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/douban-movie-robot-0.0.1-SNAPSHOT.jar
          remote: /docker/douban-movie-robot/application.jar
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
#      - name: 在服务器上执行编译docker镜像、安装docker应用及push到服务器
#        if: always()
#        uses: fifsky/ssh-action@master
#        with:
#          command: | # 命令中的 & 表示在后台运行进程
#            cd /volume1/docker/douban-movie-robot
#            sudo docker build -t jacksaoding/douban_movie_robot . -f Dockerfile --platform linux/amd64
#            sudo docker-compose up -d
#            sudo docker push jacksaoding/douban_movie_robot:latest
#          host: ${{ secrets.HOST }}
#          port: ${{ secrets.PORT }}
#          user: ${{ secrets.SSH_USER }}
#          pass: ${{ secrets.SSH_PASSWORD }}
#          args: "-tt"